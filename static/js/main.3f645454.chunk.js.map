{"version":3,"sources":["components/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomePage","useState","char","setChar","search","setSearch","data","setData","offset","setOffset","buttonDis","setButtonDis","nbuttonDis","setNButtonDis","useEffect","axios","get","then","res","charArray","map","el","className","type","placeholder","value","onChange","e","target","dataArray","onClick","disabled","href","name","rel","src","img","alt","birthday","occupation","status","nickname","portrayed","category","appearance","char_id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f645454.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./homepage.css\";\r\nimport axios from \"axios\";\r\nconst HomePage = () => {\r\n    const [char, setChar] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [data, setData] = useState([]);\r\n    const [offset, setOffset] = useState(0)\r\n    const [buttonDis, setButtonDis] = useState(true)\r\n    const [nbuttonDis, setNButtonDis] = useState(false)\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://www.breakingbadapi.com/api/characters?limit=4&offset=${offset}`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .then((data) => {\r\n                let charArray = data.map((el) => {\r\n                    return el;\r\n                });\r\n                setChar(charArray);\r\n            });\r\n    }, [offset]);\r\n    const searchField = (e) => {\r\n        setSearch(e.target.value);\r\n        axios\r\n            .get(`https://www.breakingbadapi.com/api/characters?name=${search}`)\r\n            .then((res) => {\r\n                let dataArray = res.data.map((el) => {\r\n                    return el;\r\n                });\r\n                setData(dataArray);\r\n            });\r\n    };\r\n    const nexthandle = () => {\r\n        setOffset(offset + 4)\r\n        setButtonDis(false)\r\n        if (offset === 56)\r\n            setNButtonDis(true)\r\n\r\n\r\n    }\r\n    const prevHandle = () => {\r\n        setOffset(offset - 4)\r\n        if (offset === 4)\r\n            setButtonDis(true)\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"input-group md-3 justify-content-center\">\r\n                <label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search\" aria-label=\"Search\" value={search} onChange={searchField} />\r\n                </label>\r\n            </div>\r\n\r\n            {search === \"\" ? (\r\n                <div className=\"container\">\r\n                    <div className=\"button\">\r\n                        <button onClick={() => prevHandle()} disabled={buttonDis} type=\"button\" className=\"btn btn-primary\">Previous</button>\r\n                        <button onClick={() => nexthandle()} disabled={nbuttonDis} type=\"button\" className=\"btn btn-primary\">Next</button>\r\n\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"imageContainer\">\r\n                        {char.map((el) => (\r\n                            <a\r\n                                key={el.char_id}\r\n                                href={`https://en.wikipedia.org/wiki/${el.name}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                            >\r\n\r\n                                <figure className=\"card\">\r\n                                    <img src={el.img} className=\"card-img-top\" alt={el.name} />\r\n                                    <figcaption>\r\n                                        <p><strong>Name</strong>: {el.name}</p>\r\n                                        <p><strong>DOB</strong>: {el.birthday}</p>\r\n                                        <p><strong>Role</strong>: {`${el.occupation}.`}</p>\r\n                                        <p><strong>Status</strong>: {el.status}</p>\r\n                                        <p><strong>Nickname</strong>: {el.nickname}</p>\r\n                                        <p><strong>Portrayed by</strong>: {el.portrayed}</p>\r\n                                        <p><strong>Category</strong>: {el.category}</p>\r\n                                        <p><strong>Appearance</strong>: {`${el.appearance}.`}</p>\r\n                                    </figcaption>\r\n                                </figure>\r\n                            </a>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"searchContainer\">\r\n                    {data.map((el) => (\r\n                        <a\r\n                            key={el.char_id}\r\n                            href={`https://en.wikipedia.org/wiki/${el.name}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                        >\r\n                            <figure>\r\n                                <img src={el.img} alt={el.name} />\r\n                                <figcaption>\r\n                                    <p><strong>Name</strong>: {el.name}</p>\r\n                                    <p><strong>DOB</strong>: {el.birthday}</p>\r\n                                    <p><strong>Role</strong>: {`${el.occupation}.`}</p>\r\n                                    <p><strong>Status</strong>: {el.status}</p>\r\n                                    <p><strong>Nickname</strong>: {el.nickname}</p>\r\n                                    <p><strong>Portrayed by</strong>: {el.portrayed}</p>\r\n                                    <p><strong>Category</strong>: {el.category}</p>\r\n                                    <p><strong>Appearance</strong>: {`${el.appearance}.`}</p>\r\n                                </figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    ))}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default HomePage;\r\n","import './App.css';\nimport HomePage from \"./components/HomePage\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}