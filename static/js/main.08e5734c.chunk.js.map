{"version":3,"sources":["components/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomePage","useState","char","setChar","search","setSearch","data","setData","useEffect","axios","get","then","res","charArray","map","el","id","className","type","value","placeholder","onChange","e","target","dataArray","href","name","rel","src","img","alt","birthday","occupation","status","nickname","portrayed","category","appearance","char_id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAoGeA,EAjGE,WACb,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACNC,IACKC,IADL,iDAEKC,MAAK,SAACC,GACH,OAAOA,EAAIN,QAEdK,MAAK,SAACL,GACH,IAAIO,EAAYP,EAAKQ,KAAI,SAACC,GACtB,OAAOA,KAEXZ,EAAQU,QAEjB,IAaH,OACI,qCACI,qBAAKG,GAAG,OAAR,SAEI,uBACIC,UAAU,SACVC,KAAK,OACLC,MAAOf,EACPgB,YAAY,oBACZC,SArBI,SAACC,GACjBjB,EAAUiB,EAAEC,OAAOJ,OACnBV,IACKC,IADL,6DAC+DN,IAC1DO,MAAK,SAACC,GACH,IAAIY,EAAYZ,EAAIN,KAAKQ,KAAI,SAACC,GAC1B,OAAOA,KAEXR,EAAQiB,WAgBA,KAAXpB,EACG,qBAAKa,UAAU,iBAAf,SACKf,EAAKY,KAAI,SAACC,GAAD,OACN,oBAEIU,KAAI,wCAAmCV,EAAGW,MAC1CH,OAAO,SACPI,IAAI,aAJR,UAMK,IACD,mCACI,qBAAKC,IAAKb,EAAGc,IAAKC,IAAKf,EAAGW,OAC1B,uCACI,uCAAUX,EAAGW,QACb,sCAASX,EAAGgB,YACZ,iDAAahB,EAAGiB,WAAhB,QACA,yCAAYjB,EAAGkB,UACf,2CAAclB,EAAGmB,YACjB,+CAAkBnB,EAAGoB,aACrB,2CAAcpB,EAAGqB,YACjB,6CAAgBrB,EAAGsB,sBAhBtBtB,EAAGuB,cAuBpB,qBAAKrB,UAAU,kBAAf,SACKX,EAAKQ,KAAI,SAACC,GAAD,OACN,mBAEIU,KAAI,wCAAmCV,EAAGW,MAC1CH,OAAO,SACPI,IAAI,aAJR,SAMI,mCACI,qBAAKC,IAAKb,EAAGc,IAAKC,IAAKf,EAAGW,OAC1B,uCACI,uCAAUX,EAAGW,QACb,sCAASX,EAAGgB,YACZ,uCAAUhB,EAAGiB,cACb,yCAAYjB,EAAGkB,UACf,2CAAclB,EAAGmB,YACjB,+CAAkBnB,EAAGoB,aACrB,2CAAcpB,EAAGqB,YACjB,6CAAgBrB,EAAGsB,qBAftBtB,EAAGuB,kBChErBC,MATf,WACE,OACE,qBAAKtB,UAAU,MAAf,SAEA,cAAC,EAAD,OCMWuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08e5734c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./homepage.css\";\r\nimport axios from \"axios\";\r\nconst HomePage = () => {\r\n    const [char, setChar] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://www.breakingbadapi.com/api/characters`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .then((data) => {\r\n                let charArray = data.map((el) => {\r\n                    return el;\r\n                });\r\n                setChar(charArray);\r\n            });\r\n    }, []);\r\n    const searchField = (e) => {\r\n        setSearch(e.target.value);\r\n        axios\r\n            .get(`https://www.breakingbadapi.com/api/characters?name=${search}`)\r\n            .then((res) => {\r\n                let dataArray = res.data.map((el) => {\r\n                    return el;\r\n                });\r\n                setData(dataArray);\r\n                // console.log(data)\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            <div id=\"main\">\r\n                \r\n                <input\r\n                    className=\"center\"\r\n                    type=\"text\"\r\n                    value={search}\r\n                    placeholder=\"Search Characters\"\r\n                    onChange={searchField}\r\n                />\r\n            </div>\r\n            {search === \"\" ? (\r\n                <div className=\"imageContainer\">\r\n                    {char.map((el) => (\r\n                        <a\r\n                            key={el.char_id}\r\n                            href={`https://en.wikipedia.org/wiki/${el.name}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                        >\r\n                            {\" \"}\r\n                            <figure>\r\n                                <img src={el.img} alt={el.name} />\r\n                                <figcaption>\r\n                                    <p>Name: {el.name}</p>\r\n                                    <p>DOB: {el.birthday}</p>\r\n                                    <p>Role: {`${el.occupation}.`}</p>\r\n                                    <p>Status: {el.status}</p>\r\n                                    <p>Nickname: {el.nickname}</p>\r\n                                    <p>Portrayed by: {el.portrayed}</p>\r\n                                    <p>Category: {el.category}</p>\r\n                                    <p>Appearance: {el.appearance}</p>\r\n                                </figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"searchContainer\">\r\n                    {data.map((el) => (\r\n                        <a\r\n                            key={el.char_id}\r\n                            href={`https://en.wikipedia.org/wiki/${el.name}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                        >\r\n                            <figure>\r\n                                <img src={el.img} alt={el.name} />\r\n                                <figcaption>\r\n                                    <p>Name: {el.name}</p>\r\n                                    <p>DOB: {el.birthday}</p>\r\n                                    <p>Role: {el.occupation}</p>\r\n                                    <p>Status: {el.status}</p>\r\n                                    <p>Nickname: {el.nickname}</p>\r\n                                    <p>Portrayed by: {el.portrayed}</p>\r\n                                    <p>Category: {el.category}</p>\r\n                                    <p>Appearance: {el.appearance}</p>\r\n                                </figcaption>\r\n                            </figure>\r\n                        </a>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default HomePage;\r\n","import './App.css';\nimport HomePage from \"./components/HomePage\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}