{"version":3,"sources":["components/Character.jsx","components/Landing.jsx","components/logo.png","App.js","reportWebVitals.js","index.js"],"names":["Character","data","search","className","filter","name","toLowerCase","includes","map","el","href","target","rel","src","img","alt","birthday","occupation","status","nickname","portrayed","category","appearance","char_id","Landing","useState","setData","setSearch","useEffect","a","axios","get","fetchData","type","placeholder","value","onChange","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAqCeA,EAnCG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvB,OACI,qBAAKC,UAAU,QAAf,SACKF,EAAKG,QAAO,SAAAH,GACT,OAAe,KAAXC,KAEKD,EAAKI,KAAKC,cAAcC,SAASL,EAAOI,iBADtCL,KAIZO,KAAI,SAAAC,GAAE,OACL,mBAEIC,KAAI,wCAAmCD,EAAGJ,MAC1CM,OAAO,SACPC,IAAI,aAJR,SAMI,yBAAQT,UAAU,OAAlB,UACA,qBAAKA,UAAU,iBAAiBU,IAAKJ,EAAGK,IAAKC,IAAKN,EAAGJ,OACrD,uCACI,8BAAG,0CAAH,KAA2BI,EAAGJ,QAC9B,8BAAG,yCAAH,KAA0BI,EAAGO,YAC7B,8BAAG,0CAAH,eAA8BP,EAAGQ,WAAjC,QACA,8BAAG,4CAAH,KAA6BR,EAAGS,UAChC,8BAAG,8CAAH,KAA+BT,EAAGU,YAClC,8BAAG,kDAAH,KAAmCV,EAAGW,aACtC,8BAAG,8CAAH,KAA+BX,EAAGY,YAClC,8BAAG,gDAAH,eAAoCZ,EAAGa,WAAvC,eAfCb,EAAGc,eCoBbC,G,MCjCA,IDMC,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOvB,EAAP,KAAeyB,EAAf,KACIC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACuBC,IAAMC,IAAN,kDADvB,OACU9B,EADV,OAEIyB,EAAQzB,EAAKA,MAFjB,4CADY,uBAAC,WAAD,wBAKZ+B,MAMR,OACI,sBAAK7B,UAAU,OAAf,UACI,yDACA,qBAAKA,UAAU,QAAf,SACI,uBAAO8B,KAAK,OAAOC,YAAY,oBAAoBC,MAAOjC,EAAQkC,SARrD,SAACC,GAClBV,EAAUU,EAAE1B,OAAOwB,YASnB,qBAAKhC,UAAU,YAAf,SACI,cAAC,EAAD,CAAWF,KAAMA,EAAMC,OAAQA,WEfhCoC,MATf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3205702.chunk.js","sourcesContent":["import React from 'react'\r\nimport './character.css'\r\nconst Character = ({ data, search }) => {\r\n    return (\r\n        <div className=\"image\">\r\n            {data.filter(data => {\r\n                if (search === \"\")\r\n                    return data\r\n                else if (data.name.toLowerCase().includes(search.toLowerCase()))\r\n                    return data\r\n                return false\r\n            }).map(el => (\r\n                <a\r\n                    key={el.char_id}\r\n                    href={`https://en.wikipedia.org/wiki/${el.name}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    <figure className=\"card\">\r\n                    <img className=\"characterImage\" src={el.img} alt={el.name} />\r\n                    <figcaption>\r\n                        <p><strong>Name</strong>: {el.name}</p>\r\n                        <p><strong>DOB</strong>: {el.birthday}</p>\r\n                        <p><strong>Role</strong>: {`${el.occupation}.`}</p>\r\n                        <p><strong>Status</strong>: {el.status}</p>\r\n                        <p><strong>Nickname</strong>: {el.nickname}</p>\r\n                        <p><strong>Portrayed by</strong>: {el.portrayed}</p>\r\n                        <p><strong>Category</strong>: {el.category}</p>\r\n                        <p><strong>Appearance</strong>: {`${el.appearance}.`}</p>\r\n                    </figcaption>\r\n                    </figure>\r\n                </a>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Character\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Character from './Character'\r\nimport './landing.css'\r\nimport logo from './logo.png'\r\n\r\nconst Landing = () => {\r\n    const [data, setData] = useState([])\r\n    const [search, setSearch] = useState(\"\")\r\n        useEffect(() => {\r\n            async function fetchData() {\r\n                const data = await axios.get(`https://www.breakingbadapi.com/api/characters/`)\r\n                setData(data.data)\r\n            }\r\n            fetchData()\r\n        })\r\n        const handleSearch = (e) =>{\r\n            setSearch(e.target.value)\r\n\r\n        }\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Breaking Bad Characters</h1>\r\n            <div className=\"input\">\r\n                <input type=\"text\" placeholder='Search Characters' value={search} onChange={handleSearch} />\r\n            </div>\r\n            <div className=\"character\">\r\n                <Character data={data} search={search} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","export default __webpack_public_path__ + \"static/media/logo.a3a715ab.png\";","import './App.css';\nimport Landing from './components/Landing';\n// import HomePage from \"./Practice/HomePage\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Landing/>\n    {/* <HomePage /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}